#!/usr/bin/env bash
DEV_HOME="${HOME}/dev"
REPO_PATH=$(git rev-parse --show-toplevel)
SUBLIME_PATH="${HOME}/Library/Application Support/Sublime Text/Packages/User"

function echo-err { echo "$@" 1>&2; }

function exists-in-path {
    if [[ -n $1 ]]; then
        type -p "$1" > /dev/null 2>&1
        return $?
    else
        return 1
    fi
}

function symlink-src-to-target {
    SRC=$1
    TARGET=$2
    if [ $# != 2 ]; then
        echo-err "Usage: $0 [src] [target]"
        return 1
    fi
    # only link files or directories rather than linking other symlinks
    if [[ -f $SRC || -d $SRC ]]; then
        # is target already a symlink that points to the expected?
        if [[ -L $TARGET && "$(readlink "$TARGET")" == "$SRC" ]]; then :
        else
            # check if target exists, if it exists, then make a backup (rather than deleting)
            [[ -e $TARGET ]] && mv "$TARGET" "$(dirname "$TARGET")/$(basename "$TARGET").$(date +%s).bak"
            [[ -L $TARGET ]] || ln -s "$SRC" "$TARGET"
        fi
        return 0
    else
        echo-err "$SRC is not a file or a directory"
        return 1
    fi
}

[ -d "${DEV_HOME}" ] || mkdir -p "${DEV_HOME}"

# Set Bash as default shell
if [[ "/bin/bash" != "$(dscl . -read ~/ UserShell | sed 's/UserShell: //')" ]]; then
    chsh -s /bin/bash
fi

# Show hidden files
defaults write com.apple.finder AppleShowAllFiles TRUE

# bootstrap homebrew
exists-in-path brew || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# install homebrew deps
brew update
brew bundle --file="${REPO_PATH}/brew/Brewfile"

# setup environment links
symlink-src-to-target "${REPO_PATH}/bash_profile" "${HOME}/.bash_profile"
symlink-src-to-target "${REPO_PATH}/profile.sh" "${HOME}/.profile"
symlink-src-to-target "${REPO_PATH}/gitconfig" "${HOME}/.gitconfig"
symlink-src-to-target "${REPO_PATH}/gitignore" "${HOME}/.gitignore"

# link sublime config files
while read -r CONF_FILE; do
    symlink-src-to-target "${CONF_FILE}" "${SUBLIME_PATH}/$(basename "${CONF_FILE}")"
done < <(find "${REPO_PATH}/sublime" -type f -maxdepth 1 -mindepth 1)
